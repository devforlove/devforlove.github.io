- layout: left
  name: Dash Server
  job_title: 게시판 
  dates: 2022.07 ~ 2023.03
  link: https://github.com/violetbeach/verby-server
  quote: >
    MSA를 적용한 게시판 서버 (1인 개발)
  description: | # this will include new lines to allow paragraphs
    * [CQRS, 이벤트 기반 아키텍처 적용]
    * Storage 접근에 대한 Transaction 분리 (AWS S3 presigned-url)
    * API 문서 자동화 (Optional 표현, 에러 코드 문서화 등 Custom)
    * [WriteBack으로 좋아요 수 집계](https://github.com/violetbeach/verby-server/blob/master/batch-server/src/main/java/com/verby/batchserver/cover/WriteBackCoverHitsScheduler.java){:target="_blank"}
    * [멀티모듈 배포 프로세스 구축 (CircleCI, CodeDeploy)](https://jaehoney.tistory.com/253){:target="_blank"}
    * [패키지 의존성 사이클 제거 (IntelliJ Analyze)](https://jaehoney.tistory.com/311){:target="_blank"}

- layout: left
  name: DDC API Server 
  job_title: API
  dates: 2023.06 ~ 2023.06
  link: https://github.com/violetbeach/kis-trading-server
  quote: >
    대량의 사용자 요청을 처리하는 REST API 서버 
  description: | # this will include new lines to allow paragraphs
    * Quartz + Batch 기반의 데이터 수집 서버
    * Batch 서버 특성 고려한 테스트 Coverage 100%
    * 객체지향 생활체조 원칙 9가지 적용 [(정리)](https://jaehoney.tistory.com/343){:target="_blank"}

- layout: left
  name: DDC Batch Server
  job_title: 배치 서버 
  dates: 2023.04 ~ 2023.06
  quote: >
    배치성 작업을 처리하는 서버 
  description: | # this will include new lines to allow paragraphs
    * Hexagonal Architecture 적용 및 팀에 전파
    * ATDD 적용 (Test Coverage: 100%) 및 팀에 전파
    * [Kafka 설계 및 적용](https://jaehoney.tistory.com/336){:target="_blank"}
    * NoSQL 데이터 모델링

- layout: left
  name: HADA Server 
  dates: 2021.10 ~ 2022.01
  quote: >
    기존 종이로 하던 시설 점검을 QR 기반으로 디지털화 해주는 솔루션
  description: | # this will include new lines to allow paragraphs
    * [SQL 정렬 쿼리 튜닝을 통해 페이징 쿼리 응답 속도 평균 20초에서 3초로 개선  ](https://github.com/violetbeach/blog-code/tree/master/loadtest/mail-api/readme.md){:target="_blank"}
    * [JavaMail API 메모리 성능 튜닝](https://jaehoney.tistory.com/360){:target="_blank"}, [레거시 정책 OOM 문제 해결](https://jaehoney.tistory.com/361){:target="_blank"}
    * [HikariCP 커넥션 누수 해결](https://jaehoney.tistory.com/337){:target="_blank"}
    * [전반적인 JPA, Querydsl의  성능 개선  (execution: 3.792s to 371ms)](https://jaehoney.tistory.com/333){:target="_blank"}, [Outer Join 문제 해결 (TPS: 10.8 to 107.7)](https://github.com/violetbeach/blog-code/blob/master/loadtest/mail-api/readme.md#4-1-mails){:target="_blank"}
    * Code pipeline을 이용한 배포 자동화를 구축하여 기존 배포 시간을 평균 10분에서 3분 이내로 단축 
